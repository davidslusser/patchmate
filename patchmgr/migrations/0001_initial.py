# Generated by Django 2.2.6 on 2019-12-10 05:02

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='PackageWhitelist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='date/time when this row was added')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='date/time when this row was updated')),
                ('active', models.BooleanField(default=True, help_text='select if this record is currently active')),
                ('name', models.CharField(help_text='name of this service', max_length=32, unique=True)),
                ('description', models.CharField(blank=True, help_text='description of this whitelist entry', max_length=255, null=True)),
                ('package_regex', models.CharField(blank=True, help_text='package regex', max_length=64, null=True)),
            ],
            options={
                'ordering': ('-created_at',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PatchEvenStep',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', 'pending'), ('started', 'started'), ('completed', 'completed')], help_text='status of this step', max_length=16)),
                ('result', models.CharField(choices=[('unknown', 'unknown'), ('success', 'success'), ('error', 'error')], help_text='result of this step', max_length=16)),
                ('completed', models.NullBooleanField(default=None)),
                ('output', models.TextField(blank=True, help_text='details or output from this step', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='date/time when this event started')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='date/time when this event updated')),
            ],
        ),
        migrations.CreateModel(
            name='PatchEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True, help_text='select if this record is currently active')),
                ('status', models.CharField(choices=[('pending', 'pending'), ('started', 'started'), ('completed', 'completed')], max_length=16)),
                ('completed', models.NullBooleanField(default=None)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='date/time when this event started')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='date/time when this event updated')),
            ],
            options={
                'ordering': ('-created_at',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PatchPool',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='date/time when this row was added')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='date/time when this row was updated')),
                ('active', models.BooleanField(default=True, help_text='select if this record is currently active')),
                ('name', models.CharField(help_text='name of this pool', max_length=32, unique=True)),
                ('description', models.CharField(blank=True, help_text='description of this patching pool', max_length=255, null=True)),
                ('hostname_regex', models.CharField(help_text='regex pattern for hosts in this pool', max_length=255, unique=True)),
                ('patching_enabled', models.BooleanField(default=False, help_text='enable patching on this pool')),
            ],
            options={
                'ordering': ('-created_at',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PatchPoolRule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='date/time when this row was added')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='date/time when this row was updated')),
                ('active', models.BooleanField(default=True, help_text='select if this record is currently active')),
                ('name', models.CharField(help_text='name of this patching schedule', max_length=32, unique=True)),
                ('patching_enabled', models.BooleanField(default=False, help_text='enable patching on this pool')),
                ('min_percent_in_service', models.FloatField(default=0, help_text='percent of hosts in this pool that must remain in service')),
                ('max_percent_out_of_service', models.FloatField(default=10, help_text='percent of hosts in this pool that can be out of service')),
                ('max_percent_daily_patch', models.FloatField(default=10, help_text='percent of hosts in this pool that can be patched in a single day')),
            ],
            options={
                'ordering': ('-created_at',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PatchQueue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='date/time when this row was added')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='date/time when this row was updated')),
                ('active', models.BooleanField(default=True, help_text='select if this record is currently active')),
            ],
            options={
                'ordering': ('-created_at',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PatchSchedule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='date/time when this row was added')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='date/time when this row was updated')),
                ('active', models.BooleanField(default=True, help_text='select if this record is currently active')),
                ('name', models.CharField(help_text='name of this patching schedule', max_length=32)),
                ('patching_enabled', models.BooleanField(default=False, help_text='enable patching on this pool')),
                ('start_day', models.CharField(choices=[('Sunday', 'Sunday'), ('Monday', 'Monday'), ('Tuesday', 'Tuesday'), ('Wednesday', 'Wednesday'), ('Thursday', 'Thursday'), ('Friday', 'Friday'), ('Saturday', 'Saturday')], default='Monday', help_text='day of week this schedule starts', max_length=16)),
                ('start_hour', models.IntegerField(default=8, help_text='hour of day this schedule starts', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(23)])),
                ('start_minute', models.IntegerField(default=0, help_text='minute of hour this schedule starts', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(60)])),
                ('end_day', models.CharField(choices=[('Sunday', 'Sunday'), ('Monday', 'Monday'), ('Tuesday', 'Tuesday'), ('Wednesday', 'Wednesday'), ('Thursday', 'Thursday'), ('Friday', 'Friday'), ('Saturday', 'Saturday')], default='Monday', help_text='day of week this schedule starts', max_length=16)),
                ('end_hour', models.IntegerField(default=5, help_text='hour of day this schedule starts', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(23)])),
                ('end_minute', models.IntegerField(default=0, help_text='minute of hour this schedule starts', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(60)])),
            ],
        ),
        migrations.CreateModel(
            name='ServiceControl',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='date/time when this row was added')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='date/time when this row was updated')),
                ('active', models.BooleanField(default=True, help_text='select if this record is currently active')),
                ('alerts_email', models.BooleanField(default=False, help_text='enable email alerts')),
                ('alerts_slack', models.BooleanField(default=False, help_text='enable slack alerts')),
                ('patching_enabled', models.BooleanField(default=False, help_text='enable/disable patching on this service')),
                ('script_path', models.CharField(default='/opt/patchmate/service_control_scripts', help_text='location on hosts where service control scripts live', max_length=64)),
                ('patch_frequency', models.IntegerField(default=60, help_text='frequency, in days, of how often patch events should take place')),
                ('min_percent_in_service', models.IntegerField(default=0, help_text='percent of hosts in this service that must remain in service')),
                ('max_percent_out_of_service', models.IntegerField(default=10, help_text='percent of hosts in this service that can be out of service')),
                ('max_percent_daily_patch', models.IntegerField(default=10, help_text='percent of hosts that can be patched in a single day')),
            ],
            options={
                'ordering': ('-created_at',),
                'abstract': False,
            },
        ),
    ]
